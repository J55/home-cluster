# ---
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: grafana
#   namespace: monitoring
# spec:
#   interval: 5m
#   chart:
#     spec:
#       # renovate: registryUrl=https://grafana.github.io/helm-charts
#       chart: grafana
#       version: 6.40.3
#       sourceRef:
#         kind: HelmRepository
#         name: grafana-charts
#         namespace: flux-system
#       interval: 5m
#   values:
#     deploymentStrategy:
#       type: Recreate

#     env:
#       GF_EXPLORE_ENABLED: true
#       GF_PANELS_DISABLE_SANITIZE_HTML: true
#       GF_LOG_FILTERS: rendering:debug

#     dashboardProviders:
#       dashboardproviders.yaml:
#         apiVersion: 1
#         providers:
#         - name: 'default'
#           orgId: 1
#           folder: ''
#           type: file
#           disableDeletion: false
#           editable: true
#           options:
#             path: /var/lib/grafana/dashboards/default

#     ingress:
#       enabled: true
#       ingressClassName: nginx
#       path: /
#       pathType: Prefix
#       hosts:
#         - "grafana.${SECRET_CLUSTER_DOMAIN}"

#     persistence:
#       enabled: true
#       storageClassName: longhorn
#       size: 3Gi

#     datasources:
#       datasources.yaml:
#         apiVersion: 1
#         datasources:
#         - name: Prometheus
#           type: prometheus
#           url: http://prometheus-operated:9090
#           access: proxy
#           isDefault: true

#     dashboards:
#       default:
#         prometheus-stats:
#           gnetId: 2
#           revision: 2
#           datasource: Prometheus
#         kubernetes-cluster:
#           gnetId: 6417
#           revision: 1
#           datasource: Prometheus
#         nginx-dashboard:
#           url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
#           datasource: Prometheus
#         # Ref: https://grafana.com/grafana/dashboards/11315
#         unifi-client-insights:
#           gnetId: 11315
#           revision: 8
#           datasource: Prometheus
#         # Ref: https://grafana.com/grafana/dashboards/11311
#         unifi-network-sites:
#           gnetId: 11311
#           revision: 4
#           datasource: Prometheus
#         # Ref: https://grafana.com/grafana/dashboards/11314
#         unifi-uap-insights:
#           gnetId: 11314
#           revision: 9
#           datasource: Prometheus
#         # Ref: https://grafana.com/grafana/dashboards/11312
#         unifi-usw-insights:
#           gnetId: 11312
#           revision: 8
#           datasource: Prometheus
#         flux-cluster:
#           url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
#           datasource: Prometheus
#         flux-control-plane:
#           url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
#           datasource: Prometheus
#         radarr:
#           url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
#           datasource: Prometheus
#         sonarr:
#           url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
#           datasource: Prometheus
#         pihole:
#           gnetId: 10176
#           revision: 2
#           datasource: Prometheus

#     envFromSecret: grafana-auth

#     sidecar:
#       dashboards:
#         enabled: true
#         searchNamespace: ALL
#       datasources:
#         enabled: true
#         searchNamespace: ALL

#     plugins:
#     - natel-discrete-panel
#     - pr0ps-trackmap-panel
#     - grafana-piechart-panel
#     - vonage-status-panel
#     - grafana-worldmap-panel
#     - grafana-clock-panel

#     serviceMonitor:
#       enabled: true

#     grafana.ini:
#       paths:
#         data: /var/lib/grafana/data
#         logs: /var/log/grafana
#         plugins: /var/lib/grafana/plugins
#         provisioning: /etc/grafana/provisioning
#       analytics:
#         check_for_updates: true
#       log:
#         mode: console
#       grafana_net:
#         url: https://grafana.net
#       server:
#         root_url: "https://grafana.${SECRET_CLUSTER_DOMAIN}"
#       auth.azuread:
#         enabled: true
#         name: Azure AD
#         allow_sign_up: true
#         allowed_domains: luander.net
#         allowed_groups:
#         scopes: openid email profile

#     affinity:
#       nodeAffinity:
#         requiredDuringSchedulingIgnoredDuringExecution:
#           nodeSelectorTerms:
#             - matchExpressions:
#               - key: beta.kubernetes.io/arch
#                 operator: In
#                 values:
#                   - amd64
# ---
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: grafana
#   namespace: monitoring
# spec:
#   interval: 15m
#   chart:
#     spec:
#       chart: grafana
#       version: 6.32.12
#       sourceRef:
#         kind: HelmRepository
#         name: grafana
#         namespace: flux-system
#   install:
#     createNamespace: true
#     remediation:
#       retries: 5
#   upgrade:
#     remediation:
#       retries: 5
#   dependsOn:
#     - name: postgres
#       namespace: default
#   values:
#     replicas: 3
#     admin:
#       existingSecret: grafana-admin
#     envFromSecrets:
#       - name: grafana
#     grafana.ini:
#       auth:
#         signout_redirect_url: "https://auth.${SECRET_DOMAIN}/logout"
#         oauth_auto_login: false
#       auth.generic_oauth:
#         enabled: true
#         name: Authelia
#         client_id: grafana
#         client_secret: "${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}"
#         scopes: "openid profile email groups"
#         empty_scopes: false
#         auth_url: "https://auth.${SECRET_DOMAIN}/api/oidc/authorization"
#         token_url: "https://auth.${SECRET_DOMAIN}/api/oidc/token"
#         api_url: "https://auth.${SECRET_DOMAIN}/api/oidc/userinfo"
#         login_attribute_path: preferred_username
#         groups_attribute_path: groups
#         name_attribute_path: name
#         use_pkce: true
#       auth.generic_oauth.group_mapping:
#         role_attribute_path: |
#           contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
#         org_id: 1
#       auth.basic:
#         enabled: false
#         # disable_login_form: false
#       auth.anonymous:
#         enabled: true
#         org_name: HomeOps
#         org_id: 1
#         org_role: Viewer
#     dashboardProviders:
#       dashboardproviders.yaml:
#         apiVersion: 1
#         providers:
#           - name: "default"
#             orgId: 1
#             folder: ""
#             type: file
#             disableDeletion: false
#             editable: true
#             options:
#               path: /var/lib/grafana/dashboards/default
#     datasources:
#       datasources.yaml:
#         apiVersion: 1
#         # list of datasources that should be deleted from the database
#         deleteDatasources:
#           - name: Loki
#             orgId: 1
#         datasources:
#           - name: Prometheus
#             type: prometheus
#             access: proxy
#             url: http://thanos-query:9090/
#             # url: http://mimir-query-frontend.monitoring.svc.cluster.local:8080/prometheus
#             isDefault: true
#           - name: Loki
#             type: loki
#             access: proxy
#             url: http://loki-gateway:80
#     dashboards:
#       default:
#         # Ref: https://grafana.com/grafana/dashboards/7845
#         zfs:
#           gnetId: 7845
#           revision: 4
#           datasource: Prometheus
#         # Ref: https://grafana.com/grafana/dashboards/13502
#         minio:
#           gnetId: 13502
#           revision: 10
#           datasource: Prometheus
#     sidecar:
#       dashboards:
#         enabled: true
#         searchNamespace: ALL
#         # folderAnnotation: grafana_folder
#         # provider:
#         #   foldersFromFilesStructure: true
#       datasources:
#         enabled: true
#         searchNamespace: ALL
#     plugins:
#       - natel-discrete-panel
#       - pr0ps-trackmap-panel
#       - grafana-piechart-panel
#       - vonage-status-panel
#       - grafana-worldmap-panel
#       - grafana-clock-panel
#     serviceMonitor:
#       enabled: true
#     ingress:
#       enabled: true
#       ingressClassName: "nginx"
#       annotations:
#         external-dns.home.arpa/enabled: "true"
#       hosts:
#         - &host "grafana.${SECRET_PUBLIC_DOMAIN}"
#       tls:
#         - hosts:
#             - *host
#     persistence:
#       enabled: false
#     affinity:
#       podAntiAffinity:
#         preferredDuringSchedulingIgnoredDuringExecution:
#           - weight: 100
#             podAffinityTerm:
#               labelSelector:
#                 matchExpressions:
#                   - key: app.kubernetes.io/name
#                     operator: In
#                     values:
#                       - grafana
#               topologyKey: kubernetes.io/hostname
